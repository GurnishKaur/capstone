# -*- coding: utf-8 -*-
"""Python Projects.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LdrIX6tLOZNE8Q1OZrJPc1WS-QcJNqod

# **Dice Roll Simulator**

A Dice rolling simulator is nothing but a computer model that can be created by a software program and it functions same as a normal dice in which user rolls a dice and a random number gets shown on the screen.
"""

import random 
while True:     
     print(''' 1. roll the dice             2. exit     ''')    
     user = int(input("what you want to do\n"))     
     if user==1:         
        number = random.randint(1,6)         
        print(number)     
     else:         
        break

"""# **Guess the Number Game**

Randomly select a number in a range then the user has to guess the number. User has three chances to guess the number if he guess correct then a message print saying “you guess right “otherwise a negative message prints.
"""

import random
number = random.randint(1,10)
for i in range(0,3):
    user = int(input("guess the number"))
    if user == number:
        print("Hurray!!")
        print(f"you guessed the number right it's {number}")
        break
if user != number:
    print(f"Your guess is incorrect the number is {number}")

"""# **Random Password Generator**

To create a program that takes a number and generate a random password length of that number
"""

import random
passlen = int(input("enter the length of password"))
s="abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?"
p =  "".join(random.sample(s,passlen ))
print (p)

"""# **Binary Search**

The goal of binary search is to search whether a given number is present in the string or not.
"""

lst = [1,3,2,4,5,6,9,8,7,10]
lst.sort()
first=0
last=len(lst)-1
mid = (first+last)//2
item = int(input("enter the number to be search"))
found = False
while( first<=last and not found):
    mid = (first + last)//2
    if lst[mid] == item :
         print(f"found at location {mid}")
         found= True
    else:
        if item < lst[mid]:
            last = mid - 1
        else:
            first = mid + 1 
   
if found == False:
    print("Number not found")